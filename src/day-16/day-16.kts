val dataExample = listOf(
        ".|...\\....",
        "|.-.\\.....",
        ".....|-...",
        "........|.",
        "..........",
        ".........\\",
        "..../.\\\\..",
        ".-.-/..|..",
        ".|....-|.\\",
        "..//.|...."
)
val data = listOf(
        "\\..../...................-......|..........|...-|.-.............|...................\\/......-.................",
        "../|....|.......-...............\\....\\...........-...............|.......|...........-........................",
        "............................\\........../|........./.......................................\\.........|....|./||",
        "..................\\.//.............-.......\\..-.|.......\\.......\\.............................-..-....|.......",
        "../....\\......|.|......|.....|./.-...|......-................//......|.../..-........\\............\\...........",
        "...|...-.....\\...............-.../.................|...............\\-................/|...............\\.......",
        "|............................./...\\.........\\.............-....../-..|......|.|.../................\\..........",
        ".............-.|.../................|....................../................../..............................-",
        ".......\\.\\....../.....|...........................-............/..-........-........................\\......-..",
        ".....-.\\................-.....|\\....-....|..../....|.....|.\\............./.../.....\\...............|....|.....",
        "....|............................/............-|..|.........................-....................-....\\.......",
        "|....../......../../............................../....|......\\..\\....\\\\./.|................/......\\......-./\\",
        "........-........./|............................./....\\....-................../...|........|........-.........",
        "..........\\......./..................|..../.........../.........../........../...................|.-.\\.......\\",
        "................-..........\\....................................../.........\\\\........-...--..........|..\\....",
        ".-./...\\......................\\...../...\\.\\../.......|....................-...............\\.-....\\......./\\..\\",
        ".......................-.......\\..............................\\............................\\.|...-............",
        ".......|...-..........-........-.......\\.........././.-..|..../.....................\\.........................",
        ".....................\\..|...../........\\.....\\\\\\..........\\........................-............\\..\\...\\......",
        "....|.................|.........|.................................../.............-...........................",
        "......................|................../....\\..|...................-.\\.......-\\.........................|...",
        "........-.........|.......\\.................|................-..|../|\\............../......................../",
        "............|.\\.................\\..-...\\.../...-....\\...\\...........|../..\\........\\.-........................",
        "......./..............-..//................-.............../................/...-.......-......-............|.",
        "........\\|...\\......-....|...........\\....\\./..........-......\\......../..-...-...|........|/................\\",
        "....\\....-../......-..................................|..\\/../....-.....|...............\\.-.....\\............|",
        "...................|..................|...........\\............./.......-.......................\\..\\-../../...",
        "....-..............-..\\/.|.......................\\.................../......|..-..\\......|.........-/.........",
        "........................./..\\-..-.|..........-.....-............................\\...................../.......",
        "...../../..../....|...|..|...|.......\\..\\...\\........-..../.../......................-....../..\\..............",
        "..........\\.......\\.....|.../.........../....|./.../......-..../.....|-...||......./..........|...\\...........",
        "...............................................-.........\\.....|..................\\|......................\\...",
        ".....................................\\..................--......-........................-.//-....../-.-.....|",
        "........../..../.....|....\\........................|.................................../............./...-/...",
        "........................-............./....-....-...-...........-..............|..............................",
        "......|.....|........-./...\\........|......................|........|.......|...-.....|.......................",
        "..-.......-....../.............-..\\...................................|.........|..........|............./....",
        ".............................|.....\\...........................././|......|................-....-.............",
        "........../..................-..........\\....\\..../.....\\.................-...........|.......................",
        "................../..-......................|...........-|..............-......|......................-.......",
        "-...........-..........|........-.......|\\.././.|............................-/.|...........-/...............\\",
        ".../..-..........................--.........|...|.|...................................-|...\\........|.........",
        "........|.......-............|.........--.........-......./..../........-........\\....../..../...........-....",
        "..............-.............../...........................-................./......--..\\..../.................",
        ".......................--...........\\..............\\.......-.......-..|/.....\\....-/......../........-........",
        ".............|......|...............-...................\\...............\\..-.....................|.\\.........\\",
        ".....\\.-....\\............\\........|........|....\\..............\\............................................./",
        "............................../...............././.......\\.....\\..........\\|......-......|....|...........|...",
        "................|............/.....|.........|.......\\...../...|....-........|................................",
        "./...\\............\\............|..-....\\...\\........................\\..........\\......\\.-........../.....\\....",
        ".......-...|../..|..-.......-............................................-.....\\.........-........../../......",
        "...../.......-......../|..............|...................\\......|............/|..........|..|...../..-...|..-",
        "....-.........../../....../\\.................................\\./.....................-...........-............",
        ".....|....................|.....|.......-..-.........\\........|..............|...............-|.|....-/..-....",
        ".\\|............-../..\\.\\.....|....../...|.............\\.............................................\\.........",
        "........|........../...\\....-.......\\..\\.|-...........|./|./..........\\|........--...\\........\\../............",
        "\\..-..-......./.\\....../....\\..|.........\\-...-||/...-...\\....\\.......-.\\.......-................\\...\\.....\\..",
        "................................\\............../..-.......................-............./.....................",
        "\\............................/...........-......\\..-.......-.........../............|...............|.........",
        "......|..|........\\.........................../.......-.............-.................../.....................",
        "..........................|......|.../..........................\\..................................-......-...",
        "../...................-.........|...\\...........-.|/..........|........-.-.................|.......|.........\\",
        "........................../......../..................\\...........|......\\.......................-............",
        "...../..../\\.../|....\\....................................|....|......................|.........\\...........-.",
        ".|...../.....-.....................................|........||........|...........................//..........",
        "........................\\............|.............-..........................-......../..............|.......",
        "...................\\.........-.........\\..........|......................../\\...-......................\\|.....",
        "........././...........|.|..................../.....................-.............................-.|.|...-...",
        ".-................................................-................-..\\........-................../.\\....|...|",
        ".................../.|......\\..\\.\\./.\\.............|.......................................|..................",
        "...............|............\\\\.....-..-.........\\.....\\-|..../............|\\.......|.....\\.\\...../......\\.....",
        "...-.............../..........\\.....-..|....../......................-.....\\.................../.\\...........\\",
        "...................-.....................................\\....\\....../....|..\\...-................\\......-....",
        ".|..-............\\........|.....|.\\....\\......-............\\.|....|.\\..............\\|.|/...\\.........|....../.",
        "........../...........|.-/...\\......./../.............../.\\/......-/........................./......\\..|......",
        "........|......................................\\..................|............................/........-.-...",
        "...\\....../................/...................\\../...\\\\...................\\.......|.................-........",
        ".....................................|.........../.\\..--.........|\\..........|.....-..................|...\\...",
        ".../...........\\-..-....................\\.-..-..........................-........|..../.......................",
        ".........../-.../.............../.\\................-.-..\\.......\\/............\\......../...\\\\\\......../.......",
        ".......-..\\...\\.....\\..\\...........................|..\\.......//..................../../.........|.........-..",
        "......./............../...../.............../............/...../.............\\......-...........\\...-|.......-",
        "..|......\\....................../..................\\..................|.....................-....\\............",
        "../........................\\............/.../...............|............-......................./............",
        ".-...../......\\............\\............|..........................\\../.....\\.....................-|.../......",
        "...........|.......\\....\\.............................\\.....................--.....|......................../.",
        "...|......./-.........................../.\\......................|................|......|....|../...../......",
        "...-............./..../................-......-....\\\\..|\\...........|...................../....\\|.\\.-.....-...",
        "............./..//...........|...\\|........-/..../.............|......................../.../.................",
        "......\\........|........\\...\\.\\........../..../..-.....-......./..|............-......................-.......",
        "....-./............|......|........................./.........\\......................................\\........",
        "...................................-.........-..../....|../...........\\..-....-.|..................../...././.",
        "-...........|.-.......|.../.................|......./.....\\..\\......|.................................\\....\\..",
        "......\\.....................-....................-......................................|.....................",
        "................................\\.......-...........|\\......................./..........\\-..-................|",
        "....../......|..................\\.....|....\\...........\\...........................................\\.......|..",
        "..............-..\\..|\\.../............\\..\\.....-.....|.|\\......\\...................|.........\\...........-....",
        ".-.-..\\....././.........\\.|...-....\\....|....|............|..................../.............\\................",
        "...|..................................................-.............\\../......................................",
        "\\................-....................-./.........../.......\\./..\\|..|....../..-\\.-...\\..../.....-....|.......",
        "................|.................\\|./................-..././\\......../...................|....|....|.........",
        "........-...............................................\\........................\\.........................../",
        "....../..............................\\....\\...|........\\.-........\\...............|..../.........../...|......",
        "../....................................|...|...............................\\.\\..|.............................",
        "...|/|............|............/..........................\\.......\\.......-.../..--../...........\\|...........",
        ".......-..........\\...........\\/.....-./../................|.|........\\\\.................................-....",
        "..|..\\............\\...|........../................................../...................|.\\.............-.....",
        "....-.......\\/................../....|................-.././..|.........-..........\\.|.........../...../..|...",
        "/../.|..............||...\\..........\\....-.../.....\\-..........-.......-........................-.../...\\.....",
        "../.|....|......../........-...........................\\\\......................\\...................-.........."
)

enum class Direction {
    NORTH, SOUTH, WEST, EAST
}

class Coordinate(val x: Int, val y: Int) {
    override fun toString(): String {
        return "x: $x, y: $y"
    }
}

class TilesEnergizer(private val tiles: List<String>) {
    private var energizedTiles = getEmptyTiles()
    private val visitedTiles = mutableMapOf<String, Boolean>()

    private fun getEmptyTiles(): MutableList<String> {
        val emptyTiles = mutableListOf<String>()
        for (line in tiles) {
            emptyTiles.add(".".repeat(line.length))
        }
        return emptyTiles
    }

    private fun getNextPosition(position: Coordinate, direction: Direction): Coordinate? {
        if (direction == Direction.EAST) {
            if (position.x == tiles[0].length - 1) return null
            return Coordinate(position.x + 1, position.y)
        }
        if (direction == Direction.WEST) {
            if (position.x == 0) return null
            return Coordinate(position.x - 1, position.y)
        }
        if (direction == Direction.NORTH) {
            if (position.y == 0) return null
            return Coordinate(position.x, position.y - 1)
        }
        if (direction == Direction.SOUTH) {
            if (position.y == tiles.size - 1) return null
            return Coordinate(position.x, position.y + 1)
        }
        return null
    }

    private fun startingDirection(): Direction {
        when (tiles[0][0]) {
            '\\' -> return Direction.SOUTH
            '/' -> return Direction.NORTH
            '|' -> return Direction.SOUTH
        }
        return Direction.EAST
    }

    private fun setEnergizedTiles(position: Coordinate, direction: Direction) {
        energizedTiles[position.y] = energizedTiles[position.y].replaceRange(position.x, position.x + 1, "#")

        val visitedKey = position.toString() + direction.toString()
        val nextPosition = getNextPosition(position, direction)
        if (nextPosition != null && visitedTiles[visitedKey] != true) {
            visitedTiles[visitedKey] = true
            val nextTileValue = tiles[nextPosition.y][nextPosition.x]

            if (nextTileValue == '|') {
                setEnergizedTiles(nextPosition, Direction.NORTH)
                setEnergizedTiles(nextPosition, Direction.SOUTH)
            } else if (nextTileValue == '-') {
                setEnergizedTiles(nextPosition, Direction.EAST)
                setEnergizedTiles(nextPosition, Direction.WEST)
            } else if (nextTileValue == '\\') {
                when (direction) {
                    Direction.NORTH -> setEnergizedTiles(nextPosition, Direction.WEST)
                    Direction.EAST -> setEnergizedTiles(nextPosition, Direction.SOUTH)
                    Direction.SOUTH -> setEnergizedTiles(nextPosition, Direction.EAST)
                    Direction.WEST -> setEnergizedTiles(nextPosition, Direction.NORTH)
                }
            } else if (nextTileValue == '/') {
                when (direction) {
                    Direction.NORTH -> setEnergizedTiles(nextPosition, Direction.EAST)
                    Direction.EAST -> setEnergizedTiles(nextPosition, Direction.NORTH)
                    Direction.SOUTH -> setEnergizedTiles(nextPosition, Direction.WEST)
                    Direction.WEST -> setEnergizedTiles(nextPosition, Direction.SOUTH)
                }
            } else {
                setEnergizedTiles(nextPosition, direction)
            }
        }
    }

    fun countEnergizedTiles(position: Coordinate = Coordinate(0, 0), direction: Direction = startingDirection()): Int {
        visitedTiles.clear()
        energizedTiles = getEmptyTiles()

        setEnergizedTiles(position, direction)
        val count = energizedTiles.joinToString("").replace(".", "").length
        return count
    }

    fun countMaxEnergizedTiles(): Int {
        val counts = mutableSetOf<Int>()

        for (x in 0..<tiles[0].length) {
            counts.add(countEnergizedTiles(Coordinate(x, 0), Direction.SOUTH))
            counts.add(countEnergizedTiles(Coordinate(x, tiles.size - 1), Direction.NORTH))
        }

        for (y in tiles.indices) {
            counts.add(countEnergizedTiles(Coordinate(0, y), Direction.EAST))
            counts.add(countEnergizedTiles(Coordinate(tiles[0].length - 1, y), Direction.WEST))
        }

        return counts.max()
    }

    override fun toString(): String {
        return tiles.joinToString("\n")
    }
}

fun main() {
    val tilesEnergizer = TilesEnergizer(data)

    println("energized tiles (part-1): " + tilesEnergizer.countEnergizedTiles())

    val start = System.currentTimeMillis()
    val energizedTiles = tilesEnergizer.countMaxEnergizedTiles() // 7987
    val elapsedTime = System.currentTimeMillis() - start
    println("energized tiles (part-2): $energizedTiles ($elapsedTime ms)")
}

main()